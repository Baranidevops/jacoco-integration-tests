<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

   <beans:bean id="dbInitializer" class="com.everis.bookstore.DatabaseInitializer" />

   <!-- Spring Quartz -->
   <beans:bean name="initDatabaseJob" class="org.springframework.scheduling.quartz.JobDetailBean">
      <beans:property name="jobClass" value="com.everis.bookstore.InitDatabaseJob" />
      <beans:property name="jobDataAsMap">
         <beans:map>
            <beans:entry key="initDatabase" value-ref="dbInitializer" />
         </beans:map>
      </beans:property>
   </beans:bean>

   <beans:bean id="afterStartingTrigger"
      class="org.springframework.scheduling.quartz.SimpleTriggerBean">
      <beans:property name="jobDetail" ref="initDatabaseJob" />
      <beans:property name="repeatInterval" value="10000000" />
      <beans:property name="startDelay" value="1000" />
   </beans:bean>

   <beans:bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
      <beans:property name="jobDetails">
         <beans:list>
            <beans:ref bean="initDatabaseJob" />
         </beans:list>
      </beans:property>
      <beans:property name="triggers">
         <beans:list>
            <beans:ref bean="afterStartingTrigger" />
         </beans:list>
      </beans:property>
   </beans:bean>


   <!-- Busca automaticamente en este paquete las clases con la anotacion 
      Component -->
   <context:component-scan base-package="com.everis.bookstore" />

</beans:beans>